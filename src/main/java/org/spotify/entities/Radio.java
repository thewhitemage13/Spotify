package org.spotify.entities;


import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import java.util.Objects;

/**
 * Entity class representing a radio station.
 * <p>
 * The {@code Radio} class maps to the {@code radio} table in the database. It represents a radio station
 * that broadcasts music and provides information about the station's city, country, name, and URL.
 * </p>
 *
 * @author Mukhammed Lolo
 * @version 1.0
 */
@AllArgsConstructor
@NoArgsConstructor
@Getter
@Setter
@Entity
public class Radio {

    /**
     * The unique ID of the radio station.
     * <p>
     * This ID is automatically generated by the database upon insertion.
     * </p>
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long radioId;

    /**
     * The city where the radio station is located.
     * <p>
     * This field represents the city of the radio station.
     * </p>
     */
    private String city;

    /**
     * The country where the radio station is located.
     * <p>
     * This field represents the country of the radio station.
     * </p>
     */
    private String country;

    /**
     * The name of the radio station.
     * <p>
     * This field represents the name of the radio station.
     * </p>
     */
    private String radioName;

    /**
     * The URL of the radio station's broadcast.
     * <p>
     * This field represents the URL where the radio station's content can be accessed.
     * </p>
     */
    private String radioUrl;

    /**
     * Compares this radio station to another object.
     * <p>
     * This method compares the radio station based on its ID, city, country, name, and URL.
     * </p>
     *
     * @param o the object to compare this radio station against
     * @return {@code true} if the objects are considered equal, {@code false} otherwise
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Radio radio = (Radio) o;
        return Objects.equals(radioId, radio.radioId) && Objects.equals(city, radio.city) && Objects.equals(country, radio.country) && Objects.equals(radioName, radio.radioName) && Objects.equals(radioUrl, radio.radioUrl);
    }

    /**
     * Returns a hash code value for this radio station.
     * <p>
     * This method generates a hash code based on the radio station's ID, city, country, name, and URL.
     * </p>
     *
     * @return the hash code value for this radio station
     */
    @Override
    public int hashCode() {
        return Objects.hash(radioId, city, country, radioName, radioUrl);
    }

    /**
     * Returns a string representation of the radio station.
     * <p>
     * This method provides a string description of the radio station, including its ID, city, country,
     * name, and URL.
     * </p>
     *
     * @return a string representation of the radio station
     */
    @Override
    public String toString() {
        return "Radio{" +
                "radioId=" + radioId +
                ", city='" + city + '\'' +
                ", country='" + country + '\'' +
                ", radioName='" + radioName + '\'' +
                ", radioUrl='" + radioUrl + '\'' +
                '}';
    }
}
